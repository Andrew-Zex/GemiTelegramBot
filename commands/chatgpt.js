const axios = require('axios');
const { OpenAIToken } = require("../config.json");

module.exports = {
  name: 'chatgpt',
  handler: async (ctx) => {
    const userInput = ctx.message.text.replace('/chatgpt', '').trim();

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–≤—ë–ª —Ç–µ–∫—Å—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (!userInput) {
      return ctx.reply(
        '*‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã `/chatgpt` –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.*',
        { parse_mode: 'Markdown' }
      );
    }

    let attemptCount = 0;  // –°—á—ë—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫

    const sendRequest = async () => {
      try {
        // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ ChatGPT —á–µ—Ä–µ–∑ axios
        const response = await axios.post(
          'https://api.openai.com/v1/chat/completions',
          {
            model: "gpt-4o-mini",
            messages: [{ role: "user", content: userInput }],
          },
          {
            headers: {
              'Authorization': `Bearer ${OpenAIToken}`,
              'Content-Type': 'application/json',
            },
          }
        );

        const generatedText = response.data.choices[0].message.content || '‚ö†Ô∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.';

        const message = `
*üí¨ –í–æ–ø—Ä–æ—Å:* ${userInput}

*ü§ñ –û—Ç–≤–µ—Ç –æ—Ç ChatGPT:*
${generatedText}

üåü _–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞!_
        `;

        ctx.reply(message, { parse_mode: 'Markdown' });

      } catch (error) {
        if (error.response && error.response.status === 429) {
          // –û—à–∏–±–∫–∞ 429 - –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤
          console.log('–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤, –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞...');
          attemptCount++; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫

          if (attemptCount < 10) {
            // –ó–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
            setTimeout(sendRequest, 10000); // –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
          } else {
            // –ï—Å–ª–∏ –ø–æ–ø—ã—Ç–æ–∫ –±—ã–ª–æ 10, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            console.log('–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É');
            ctx.reply('*‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!*\n_üòî –ü—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ._', {
              parse_mode: 'Markdown',
            });
          }
        } else {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –º–æ–¥–µ–ª–∏ ChatGPT:', error);
          ctx.reply('*‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!*\n_üòî –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ._', {
            parse_mode: 'Markdown',
          });
        }
      }
    };

    sendRequest();
  },
};
